{"version":3,"sources":["balloon.png","Config.js","UiState.js","StartScreen.js","Balloon.js","GameScreen.js","EndScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Config","sizeIncrease","maxPumps","earningScale","pumpButtonActive","state","runningAnimation","roundIsRunning","nextButtonActive","pumps","rounds","currentRound","nextButtonText","showBalloon","currentScreen","start","length","end","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","StartScreen","props","classes","Fragment","Grid","container","direction","alignItems","justify","className","item","xs","Typography","gutterBottom","variant","Button","fullWidth","color","onClick","Balloon","balloonComponent","exploded","src","balloon","key","size","alt","style","transitionName","transitionLeave","transitionEnterTimeout","transitionLeaveTimeout","GameScreen","winnings","earned","nextRound","pump","sm","md","component","Paper","elevation","square","TextField","id","label","margin","disabled","value","EndScreen","sleep","milliseconds","Promise","resolve","setTimeout","defaultState","_","shuffle","buttonText","App","time","this","setState","then","runAnimation","won","reset","root","CssBaseline","React","Component","withStyles","form","width","submit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30890386.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/balloon.c898846b.png\";","const Config = {\n  sizeIncrease: 2,\n  maxPumps: [2, 3, 5, 6, 8],\n  earningScale: [\n    1, // '1'\n    1, // '2'\n    2, // '3'\n    3, // '4'\n    4, // '5'\n    6, // '6'\n    8, // '7'\n    10 // '8'\n  ]\n}\n\nexport default Config\n","const pumpButtonActive = state =>\n  !state.runningAnimation && roundIsRunning(state)\n\nconst nextButtonActive = state => !state.runningAnimation && state.pumps > 0\n\nconst roundIsRunning = state =>\n  state.pumps <= state.rounds[state.currentRound - 1]\n\nconst nextButtonText = state =>\n  roundIsRunning(state) ? 'Take Winnings' : 'Next Round'\n\nconst showBalloon = state => state.pumps <= state.rounds[state.currentRound - 1]\n\nconst start = state => state.currentRound === 0\n\nconst end = state => state.currentRound > state.rounds.length\n\nconst currentScreen = state => {\n  if (start(state)) {\n    return 'START'\n  }\n\n  if (end(state)) {\n    return 'END'\n  }\n\n  return 'GAME'\n}\nconst getUiState = state => {\n  return {\n    currentScreen: currentScreen(state),\n    showBalloon: showBalloon(state),\n    nextButtonActive: nextButtonActive(state),\n    nextButtonText: nextButtonText(state),\n    pumpButtonActive: pumpButtonActive(state)\n  }\n}\n\nexport { getUiState, roundIsRunning }\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}))\n\nexport default function StartScreen(props) {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        className={classes.container}\n      >\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h1\">\n            Welcome.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={props.onClick}\n          >\n            Start\n          </Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport balloon from './balloon.png'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nconst Balloon = props => {\n  const balloonComponent = props.exploded ? null : (\n    <img\n      src={balloon}\n      key={props.size}\n      alt=\"logo\"\n      style={{ height: `${40 + props.size}vmin` }}\n    />\n  )\n\n  return (\n    <CSSTransitionGroup\n      transitionName=\"balloon\"\n      transitionLeave={props.exploded}\n      transitionEnterTimeout={500}\n      transitionLeaveTimeout={1000}\n    >\n      {balloonComponent}\n    </CSSTransitionGroup>\n  )\n}\nexport default Balloon\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Balloon from './Balloon'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport Config from './Config'\nimport './GameScreen.css'\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}))\n\nexport default function GameScreen(props) {\n  const classes = useStyles()\n\n  const {\n    winnings,\n    earned,\n    nextRound,\n    nextButtonText,\n    nextButtonActive,\n    showBalloon,\n    pumpButtonActive,\n    pumps,\n    pump\n  } = props\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Winnings\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={true}\n            fullWidth\n            value={winnings}\n          />\n          <TextField\n            id=\"outlined-name\"\n            label=\"Earned\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={true}\n            fullWidth\n            value={earned}\n          />\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            disabled={!pumpButtonActive}\n            onClick={pump}\n          >\n            Pump\n          </Button>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            disabled={!nextButtonActive}\n            onClick={nextRound}\n          >\n            {nextButtonText}\n          </Button>\n        </div>\n      </Grid>\n      <Grid item xs={12} sm={4} md={7} component={Paper} square>\n        <div className={classes.paper}>\n          <Balloon size={pumps * Config.sizeIncrease} exploded={!showBalloon} />\n        </div>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}))\n\nexport default function EndScreen(props) {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        className={classes.container}\n      >\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h1\">\n            Congratulations you have collected {props.winnings} points.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={props.onClick}\n          >\n            Re-Start\n          </Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport 'typeface-roboto'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport Config from './Config'\nimport { getUiState, roundIsRunning } from './UiState'\nimport StartScreen from './StartScreen'\nimport GameScreen from './GameScreen'\nimport EndScreen from './EndScreen'\nimport _ from 'lodash'\n\nconst styles = theme => ({\n  root: {\n    height: '100vh'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n})\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst defaultState = () => {\n  return {\n    pumps: 0,\n    earned: 0,\n    rounds: _.shuffle(Config.maxPumps),\n    currentRound: 0,\n    winnings: 0,\n    runningAnimation: false,\n    buttonText: 'Take winnings'\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = defaultState()\n  }\n\n  runAnimation(time = 500) {\n    this.setState({ runningAnimation: true })\n    sleep(time).then(() => this.setState({ runningAnimation: false }))\n  }\n\n  pump() {\n    const { pumps, earned } = this.state\n\n    this.runAnimation()\n    this.setState({\n      pumps: pumps + 1,\n      earned: earned + Config.earningScale[pumps]\n    })\n  }\n\n  reset() {\n    this.setState(defaultState())\n  }\n\n  nextRound() {\n    const { earned, currentRound, winnings, rounds } = this.state\n    const won = roundIsRunning(this.state)\n    this.setState({\n      ...defaultState(),\n      rounds: rounds,\n      currentRound: currentRound + 1,\n      winnings: won ? winnings + earned : winnings\n    })\n  }\n\n  currentScreen() {\n    const { pumps, winnings, earned } = this.state\n\n    const {\n      currentScreen,\n      nextButtonActive,\n      pumpButtonActive,\n      showBalloon,\n      nextButtonText\n    } = getUiState(this.state)\n\n    switch (currentScreen) {\n      case 'START':\n        return <StartScreen onClick={() => this.nextRound()} />\n      case 'END':\n        return <EndScreen winnings={winnings} onClick={() => this.reset()} />\n      default:\n        return (\n          <GameScreen\n            pumps={pumps}\n            winnings={winnings}\n            earned={earned}\n            nextRound={() => this.nextRound()}\n            nextButtonText={nextButtonText}\n            nextButtonActive={nextButtonActive}\n            showBalloon={showBalloon}\n            pumpButtonActive={pumpButtonActive}\n            pump={() => this.pump()}\n          />\n        )\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        {this.currentScreen()}\n      </Grid>\n    )\n  }\n}\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}